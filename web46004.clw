

   MEMBER('web46.clw')                                     ! This is a MEMBER module


   INCLUDE('netwebm.inc'),ONCE

                     MAP
                       INCLUDE('WEB46004.INC'),ONCE        !Local module procedure declarations
                       INCLUDE('WEB46005.INC'),ONCE        !Req'd for module callout resolution
                       INCLUDE('WEB46011.INC'),ONCE        !Req'd for module callout resolution
                       INCLUDE('WEB46013.INC'),ONCE        !Req'd for module callout resolution
                     END


WebHandler           PROCEDURE (String p_ReqString)

loc:file                              &FILE
!Local Data Classes
p_web                CLASS(NetWebServerWorker)             ! Generated by NetTalk Extension (Class Definition)
AddFile                PROCEDURE(FILE p_file),LONG,PROC,DERIVED
Authenticate           PROCEDURE(String pBearerToken),Long,PROC,DERIVED
Authenticate           PROCEDURE(String pUser,String pPassword),Long,PROC,DERIVED
CallForm               PROCEDURE(FILE p_file,LONG p_Stage),LONG,PROC,DERIVED
CloseFile              PROCEDURE(FILE p_file),LONG,PROC,DERIVED
DeleteFile             PROCEDURE(FILE p_file),LONG,PROC,DERIVED
GetFile                PROCEDURE(FILE p_file,KEY p_Key),LONG,PROC,DERIVED
GetPassword            PROCEDURE(String pUser),String,DERIVED
OpenFile               PROCEDURE(FILE p_file),LONG,PROC,DERIVED
PrimeFile              PROCEDURE(FILE p_file,Long p_Clear,Long p_forceWrite=False),LONG,PROC,DERIVED
ProcessLink            PROCEDURE(<string p_action>),DERIVED
ProcessTag             PROCEDURE(string p_TagString),DERIVED
SetErrors              PROCEDURE(),DERIVED
UpdateFile             PROCEDURE(FILE p_file),LONG,PROC,DERIVED
_NetWebFileNamed       PROCEDURE(STRING p_Label),*FILE,DERIVED
_SendFile              PROCEDURE(string p_FileName,Long p_header=NET:SendHeader),DERIVED

                     END


  CODE
  GlobalErrors.SetProcedureName('WebHandler')
  p_web.ProcessRequest(p_ReqString)
  GlobalErrors.SetProcedureName()

p_web.AddFile PROCEDURE(FILE p_file)

ReturnValue          LONG,AUTO

RM      &RelationManager
Loc:Err Long(-1)

  CODE
    RM &= NetWebRelationManager(p_File)
    If NOT RM &= Null
      self.SetSqlTimeout(p_File,net:On)
      Loc:Err = RM.Me.Insert()
      self.SetErrors()
      self.SetSqlTimeout(p_File,net:Off)
      Self.FileToSessionQueue(p_File,Net:AlsoValueQueue)
    End
    Return Loc:Err
  ReturnValue = PARENT.AddFile(p_file)
  RETURN ReturnValue


p_web.Authenticate PROCEDURE(String pBearerToken)

ReturnValue          Long,AUTO


  CODE
  ! -------------------------------------------------------------------------------------------------
  ! Add code here after the parent call to check if the BearerToken is valid. If it is then set
  ! ReturnValue to true.
  ! -------------------------------------------------------------------------------------------------
  ReturnValue = PARENT.Authenticate(pBearerToken)
  RETURN ReturnValue


p_web.Authenticate PROCEDURE(String pUser,String pPassword)

ReturnValue          Long,AUTO


  CODE
  ReturnValue = PARENT.Authenticate(pUser,pPassword)
  ! -------------------------------------------------------------------------------------------------
  ! Add code here after the parent call to check if the User and Password is correct. If it is set the
  ! ReturnValue to true. Entering code in here will allow Basic Authentication to be done automatically.
  ! -------------------------------------------------------------------------------------------------
  RETURN ReturnValue


p_web.CallForm PROCEDURE(FILE p_file,LONG p_Stage)

ReturnValue          LONG,AUTO


  CODE
    If Band(p_Stage, NET:WEB:StagePost + NET:WEB:StageValidate + NET:WEB:Cancel)
      case lower(self.formsettings.proc)
      Of 'mailboxesformcontrol'
         ReturnValue = MailboxesFormControl(Self,p_stage)
         RETURN ReturnValue
      End
    Else
      case lower(SELF.PageName)
        Of 'mailboxesformcontrol'
          ReturnValue = MailboxesFormControl(Self,p_stage)
          RETURN ReturnValue
      End
    End
    If p_File &= mailboxes
       ReturnValue = MailboxesFormControl(Self,p_stage)
       RETURN ReturnValue
    End
  ReturnValue = PARENT.CallForm(p_file,p_Stage)
  RETURN ReturnValue


p_web.CloseFile PROCEDURE(FILE p_file)

ReturnValue          LONG,AUTO

RM      &RelationManager
Loc:Err Long(-1)

  CODE
    RM &= NetWebRelationManager(p_File)
    If NOT RM &= Null
      Loc:Err = RM.Close()  ! doing an rm.close can cause problems.
    end
    Return Loc:Err
  ReturnValue = PARENT.CloseFile(p_file)
  RETURN ReturnValue


p_web.DeleteFile PROCEDURE(FILE p_file)

ReturnValue          LONG,AUTO

RM      &RelationManager
Loc:Err Long(-1)

  CODE
    RM &= NetWebRelationManager(p_File)
    If NOT RM &= Null
      self.SetSqlTimeout(p_File,net:On)
      Loc:Err = RM.Delete(False)
      Self.SetErrors()
      self.SetSqlTimeout(p_File,net:Off)
    End
    Return Loc:Err
  ReturnValue = PARENT.DeleteFile(p_file)
  RETURN ReturnValue


p_web.GetFile PROCEDURE(FILE p_file,KEY p_Key)

ReturnValue          LONG,AUTO

RM      &RelationManager
Loc:Err Long(-1)

  CODE
    RM &= NetWebRelationManager(p_File)
    If NOT RM &= Null
      self.SetSqlTimeout(p_File,net:On)
      Loc:Err = RM.Me.Fetch(p_Key)
      Self.SetErrors()
      RM.Save()                    ! saves related file info so relational update will work.
      self.SetSqlTimeout(p_File,net:Off)
    End
    Return Loc:Err
  ReturnValue = PARENT.GetFile(p_file,p_Key)
  RETURN ReturnValue


p_web.GetPassword PROCEDURE(String pUser)

ReturnValue          ANY


  CODE
  ! --------------------------------------------------------------------------------------------------
  ! Add code here to check a password if Digest Authentication is being supported. It is not necessary
  ! to add code here for other kinds of authentication.
  ! --------------------------------------------------------------------------------------------------
  ReturnValue = PARENT.GetPassword(pUser)
  RETURN ReturnValue


p_web.OpenFile PROCEDURE(FILE p_file)

ReturnValue          LONG,AUTO

RM      &RelationManager
Loc:Err Long(-1)

  CODE
    RM &= NetWebRelationManager(p_File)
    If NOT RM &= Null
      Loc:Err = RM.Open()
      self.SetErrors()
    End
    Return Loc:Err
  ReturnValue = PARENT.OpenFile(p_file)
  RETURN ReturnValue


p_web.PrimeFile PROCEDURE(FILE p_file,Long p_Clear,Long p_forceWrite=False)

ReturnValue          LONG,AUTO

RM      &RelationManager
Loc:Err Long(-1)

  CODE
    RM &= NetWebRelationManager(p_File)
    If NOT RM &= Null
      !If p_forceWrite then RM.Me.HasAutoInc = true. ! this forces an Insert, even if no keys are set as auto-inc, like in the case of a server side Identity field.
      self.SetSqlTimeout(p_File,net:On)
      Loc:Err = RM.Me.PrimeRecord(p_Clear)
      self.SetSqlTimeout(p_File,net:Off)
      Self.FileToSessionQueue(p_File,Net:AlsoValueQueue)
    End
    Return Loc:Err
  ReturnValue = PARENT.PrimeFile(p_file,p_Clear,p_forceWrite)
  RETURN ReturnValue


p_web.ProcessLink PROCEDURE(<string p_action>)


  CODE
  ! -----------------------------------------------------------------------------
  ! The incoming request has been completely parsed and is about to be processed.
  ! No tables have been opened, but they may be soon so this is a good place
  ! to set owner and filename variables .
  ! -----------------------------------------------------------------------------
  PARENT.ProcessLink(p_action)


p_web.ProcessTag PROCEDURE(string p_TagString)

loc:tag      String(1024)

  CODE
  PARENT.ProcessTag(p_TagString)
    loc:tag = lower(p_TagString)
  loc:tag = Choose(Instring('?',loc:tag) > 0,sub(loc:tag,1,Instring('?',loc:tag)-1),loc:tag)
  Case loc:tag
    of 'pageheadertag'
      pageheadertag(Self)
    of 'mailboxesbrowsecontrol'
      mailboxesbrowsecontrol(Self)
    of 'progresssofar'
      progresssofar(Self)
    of 'pagefootertag'
      pagefootertag(Self)
    of 'timeclock'
      timeclock(Self)
    of 'mailboxesformcontrol'
      mailboxesformcontrol(Self)
  End


p_web.SetErrors PROCEDURE


  CODE
    self.lastError = GlobalErrors.GetError(ErrClarion)
    self.lastErrorCode = GlobalErrors.GetErrorCode(ErrClarion)
    self.lastFileError = GlobalErrors.GetError(ErrFile)
    self.lastFileErrorCode = GlobalErrors.GetErrorCode(ErrFile)
  PARENT.SetErrors


p_web.UpdateFile PROCEDURE(FILE p_file)

ReturnValue          LONG,AUTO

RM      &RelationManager
Loc:Err Long(-1)

  CODE
    RM &= NetWebRelationManager(p_File)
    If NOT RM &= Null
      self.SetSqlTimeout(p_File,net:On)
      Loc:Err = RM.Update()
      self.SetErrors()
      self.SetSqlTimeout(p_File,net:Off)
      Self.FileToSessionQueue(p_File,Net:AlsoValueQueue)
    End
    Return Loc:Err
  ReturnValue = PARENT.UpdateFile(p_file)
  RETURN ReturnValue


p_web._NetWebFileNamed PROCEDURE(STRING p_Label)

ReturnValue          &FILE


  CODE
    ReturnValue &= NetWebFileNamed(p_Label)
    Return ReturnValue
  ReturnValue &= PARENT._NetWebFileNamed(p_Label)
  RETURN ReturnValue


p_web._SendFile PROCEDURE(string p_FileName,Long p_header=NET:SendHeader)

loc:parent  string(252)   ! should always be a lower-case string
loc:done        Long
loc:filename    string(252)

  CODE
    loc:parent = self.PlainText(Lower(self.GetValue('_parentProc_')))
    loc:filename = SELF.GetPageName(Lower(p_FileName))
  
    do CaseStart:web46
    If loc:Done then Return.
  PARENT._SendFile(p_FileName,p_header)

! ----------------------------------------------------------------
SendFile:web46:R1  Routine
  Case lower(loc:filename)
  of 'pageheadertag'
  orof 'pageheadertag' & '_' & loc:parent
      p_web.Ajax = 1
      PageHeaderTag(p_web)
      p_web.Sendfooter(12)
      loc:Done = 1
  of 'mailboxesbrowsecontrol'
  orof 'mailboxesbrowsecontrol' & '_' & loc:parent
    p_web.MakePage('MailboxesBrowseControl',Net:Web:Browse,0,'Mailboxes',,,) !sf1
    loc:Done = 1
  of 'progresssofar'
  orof 'progresssofar' & '_' & loc:parent
      p_web.Ajax = 1
      ProgressSoFar(p_web)
      p_web.Sendfooter(12)
      loc:Done = 1
  of 'pagefootertag'
  orof 'pagefootertag' & '_' & loc:parent
      p_web.Ajax = 1
      PageFooterTag(p_web)
      p_web.Sendfooter(12)
      loc:Done = 1
  of 'indexpage'
  orof 'index.htm'
    IndexPage(p_web)
    loc:Done = 1 ; Exit
  of 'timeclock'
  orof 'timeclock' & '_' & loc:parent
      p_web.Ajax = 1
      TimeClock(p_web)
      p_web.Sendfooter(12)
      loc:Done = 1
  of 'someresult'
    SomeResult(p_web)
    loc:Done = 1 ; Exit
  of 'somepage'
    SomePage(p_web)
    loc:Done = 1 ; Exit
  End ! Case Loc:filename
! ----------------------------------------------------------------------
ServicesAndMethods:web46  routine
!------------------------------------------------------------------------
Case:MailboxesFormControl  Routine
  Case lower(loc:filename)
  of 'mailboxesformcontrol'
    p_web.MakePage('MailboxesFormControl',Net:Web:Form,0,'Mailbox Setup',,,)
    loc:Done = 1 ; Exit
  of p_web.nocolon('mailboxesformcontrol_tabchanged')
    MailboxesFormControl(p_web,Net:Web:Div)
    loc:Done = 1 ; Exit
  of p_web.nocolon('mailboxesformcontrol_nexttab_0')
    MailboxesFormControl(p_web,Net:Web:NextTab)
    p_web.Sendfooter(5)
    loc:Done = 1 ; Exit
  of p_web.nocolon('mailboxesformcontrol_tab_0')
  orof p_web.nocolon('mailboxesformcontrol_mai:mailboxname_value')
  orof p_web.nocolon('mailboxesformcontrol_mai:mailboxname_value')
  orof p_web.nocolon('mailboxesformcontrol_mai:password_value')
  orof p_web.nocolon('mailboxesformcontrol_mai:password_value')
  orof p_web.nocolon('mailboxesformcontrol_mai:collectfrom_value')
  orof p_web.nocolon('mailboxesformcontrol_mai:collectfrom_value')
  orof p_web.nocolon('mailboxesformcontrol_mai:collectto_value')
  orof p_web.nocolon('mailboxesformcontrol_mai:collectto_value')
  orof p_web.nocolon('mailboxesformcontrol_timeclock_value')
  orof p_web.nocolon('mailboxesformcontrol_dynamicchart_value')
    MailboxesFormControl(p_web,Net:Web:Div)
    p_web.Sendfooter(11)
    loc:Done = 1 ; exit
  End ! Case

!------------------------------------------------------------------------
CaseStart:web46  routine
  do ServicesAndMethods:web46
  if loc:done then exit.
  do SendFile:web46:R1
  if loc:done then exit.
  do Case:MailboxesFormControl
  if loc:done then exit.
